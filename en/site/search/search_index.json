{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About Choreo \u00b6 Modern-day developers face two main challenges. First the complexity associated with their apps has increased. In the cloud, everything from building ad-hoc applications that integrate different systems to building enterprise applications that run securely and reliably at scale have become notoriously complex and hard. Developers now have to learn so much to get a simple application running efficiently in the cloud. A modern-day cloud-native developer must be knowledgeable about Kubernetes, CI/CD, service-meshes, security, compliance, and so on. Tech giants such as Amazon, Netflix, Google have tamed this complexity; however, it took billions of dollars and thousands of hours of the smartest developer minds on the planet. Read more","title":"Documentation"},{"location":"#about-choreo","text":"Modern-day developers face two main challenges. First the complexity associated with their apps has increased. In the cloud, everything from building ad-hoc applications that integrate different systems to building enterprise applications that run securely and reliably at scale have become notoriously complex and hard. Developers now have to learn so much to get a simple application running efficiently in the cloud. A modern-day cloud-native developer must be knowledgeable about Kubernetes, CI/CD, service-meshes, security, compliance, and so on. Tech giants such as Amazon, Netflix, Google have tamed this complexity; however, it took billions of dollars and thousands of hours of the smartest developer minds on the planet. Read more","title":"About Choreo"},{"location":"faq/","text":"FAQ \u00b6","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"page-not-found/","text":"Try one of the navigation links above or use the search engine in the top right corner.","title":"Page not found"},{"location":"community/community/","text":"","title":"Community"},{"location":"concepts/choreo-concepts/","text":"Choreo Concepts \u00b6","title":"Concepts"},{"location":"concepts/choreo-concepts/#choreo-concepts","text":"","title":"Choreo Concepts"},{"location":"get-started/about-this-release/","text":"About this release \u00b6","title":"About this Release"},{"location":"get-started/about-this-release/#about-this-release","text":"","title":"About this release"},{"location":"get-started/introduction-to-choreo/","text":"About Choreo \u00b6 Modern-day developers face two main challenges. First, the complexity associated with their apps has increased. In the cloud, everything from building ad-hoc applications that integrate different systems to building enterprise applications that run securely and reliably at scale has become notoriously complex and hard. Developers now have to learn so much to get a simple application running efficiently in the cloud. A modern-day cloud-native developer must be knowledgeable about Kubernetes, CI/CD, service-meshes, security, compliance, and so on. Tech giants such as Amazon, Netflix, Google have tamed this complexity; however, it took billions of dollars and thousands of hours of the smartest developer minds on the planet. Second, because competitive advantages are increasingly becoming digital, companies need more developers. Thus, developers' todo list keeps growing. Choreo is a platform that helps developers to rapidly develop, operate, and evolve cloud-native enterprise applications while taming the complexity. It consists of an AI-assisted, low-code application development environment that helps developers to develop enterprise-quality apps faster while ensuring best practices and secure coding guidelines. Developers can switch between a visual low-code and typical code environment and select the experience that best supports a given situation. Even without expert-level coding skills, Choreo's low-code environment enables developers to easily build applications. It also provides capabilities to collaborate and improve these applications as needed. The low-code application development platform auto-generates editable and version-controlled code and maintains these in Git. This enables applying the engineering rigor required for enterprise applications on low-code. Thus with Choreo, the battle-proven software development lifecycle (SDLC) works like before. In contrast, SDLC does not work with many other low-code tools. Choreo consists of deployment environments (Dev, Staging, Prod), CI/CD pipelines, and automation tests. It empowers developers to follow cloud-native deployment practices. The platform observes user applications, presents diverse information in context, and helps with troubleshooting, notifying developers when a system deviates from normal behavior This frees them from continuously having to watch systems. Choreo makes it possible to expose services professionally, with just a few clicks, through API management. It includes a developer portal, an API gateway, and other components to expose APIs securely, with strict governance.","title":"About Choreo"},{"location":"get-started/introduction-to-choreo/#about-choreo","text":"Modern-day developers face two main challenges. First, the complexity associated with their apps has increased. In the cloud, everything from building ad-hoc applications that integrate different systems to building enterprise applications that run securely and reliably at scale has become notoriously complex and hard. Developers now have to learn so much to get a simple application running efficiently in the cloud. A modern-day cloud-native developer must be knowledgeable about Kubernetes, CI/CD, service-meshes, security, compliance, and so on. Tech giants such as Amazon, Netflix, Google have tamed this complexity; however, it took billions of dollars and thousands of hours of the smartest developer minds on the planet. Second, because competitive advantages are increasingly becoming digital, companies need more developers. Thus, developers' todo list keeps growing. Choreo is a platform that helps developers to rapidly develop, operate, and evolve cloud-native enterprise applications while taming the complexity. It consists of an AI-assisted, low-code application development environment that helps developers to develop enterprise-quality apps faster while ensuring best practices and secure coding guidelines. Developers can switch between a visual low-code and typical code environment and select the experience that best supports a given situation. Even without expert-level coding skills, Choreo's low-code environment enables developers to easily build applications. It also provides capabilities to collaborate and improve these applications as needed. The low-code application development platform auto-generates editable and version-controlled code and maintains these in Git. This enables applying the engineering rigor required for enterprise applications on low-code. Thus with Choreo, the battle-proven software development lifecycle (SDLC) works like before. In contrast, SDLC does not work with many other low-code tools. Choreo consists of deployment environments (Dev, Staging, Prod), CI/CD pipelines, and automation tests. It empowers developers to follow cloud-native deployment practices. The platform observes user applications, presents diverse information in context, and helps with troubleshooting, notifying developers when a system deviates from normal behavior This frees them from continuously having to watch systems. Choreo makes it possible to expose services professionally, with just a few clicks, through API management. It includes a developer portal, an API gateway, and other components to expose APIs securely, with strict governance.","title":"About Choreo"},{"location":"get-started/overview/","text":"Overview \u00b6","title":"Overview"},{"location":"get-started/overview/#overview","text":"","title":"Overview"},{"location":"get-started/quick-start-guide/","text":"","title":"Quick Start Guide"},{"location":"references/references/","text":"","title":"References"},{"location":"tutorials/overview/","text":"Tutorials \u00b6 sfdsfsfds","title":"Tutorials"},{"location":"tutorials/overview/#tutorials","text":"sfdsfsfds","title":"Tutorials"},{"location":"videos/videos/","text":"","title":"Videos"},{"location":"customizations/","text":"Customizations done to the material theme \u00b6 Layout, text, and image changes \u00b6 images/favicon.png images/logo.svg main.html templates/no-nav.html templates/swagger.html templates/2-column.html templates/single-column.html partials/nav-item.html partials/toc.html partials/tabs.html partials/language/en.html partials/footer.html partials/header.html partials/tabs-item.html partials/nav.html Search optimizations (note: the following are generated files) \u00b6 base.html assets/javascripts/application.c3ee3888.js assets/javascripts/modernizr.268332fc.js assets/stylesheets/application.1b62728e.css assets/stylesheets/application-palette.a8b3c06d.css How to patch the mkdocs-material theme to apply search optimizations \u00b6 Clone https://github.com/squidfunk/mkdocs-material (tag 4.5.1 ) Apply following diffs Boost title weight in search score related commit diff --git a/src/assets/javascripts/components/Material/Search/Result.jsx b/src/assets/javascripts/components/Material/Search/Result.jsx index 97a2f63e..0f54ae56 100644 --- a/src/assets/javascripts/components/Material/Search/Result.jsx +++ b/src/assets/javascripts/components/Material/Search/Result.jsx @@ -293,15 +293,14 @@ export default class Result { /* Append trailing wildcard to all terms for prefix querying */ .query(query => { + query.term(this.value_, { usePipeline: false, + fields: [\"title\"], boost: 200, + wildcard: lunr.Query.wildcard.TRAILING }) this.value_.toLowerCase().split(\" \") .filter(Boolean) .forEach(term => { - query.term(term, { wildcard: lunr.Query.wildcard.TRAILING }) - query.term(term, { - fields: [\"title\"], - boost: 200, - usePipeline: false - }) + query.term(term, { fields: [\"text\"], + boost: 1 }) }) }) - Add a loader [related commit](https://github.com/tmkasun/mkdocs-material/commit/3e92e6cd0c72bbee571cacd6941c87d25e3dd6aa) diff --git a/src/assets/javascripts/application.js b/src/assets/javascripts/application.js index 1962eea7..b3203a57 100644 --- a/src/assets/javascripts/application.js +++ b/src/assets/javascripts/application.js @@ -281,10 +281,12 @@ function initialize(config) { // eslint-disable-line func-style new Material.Search.Lock(\"[data-md-toggle=search]\"))) /* Component: search results */ + fetch(`${config.url.base}/search/search_index.json`) new Material.Event.Listener(\"[data-md-component=query]\", [ \"focus\", \"keyup\", \"change\" ], new Material.Search.Result(\"[data-md-component=result]\", () => { return fetch(`${config.url.base}/search/search_index.json`, { + cache: \"force-cache\", credentials: \"same-origin\" }).then(response => response.json()) .then(data => { diff --git a/src/assets/javascripts/components/Material/Search/Result.jsx b/src/assets/javascripts/components/Material/Search/Result.jsx index 4c876de5..889a8ff2 100644 --- a/src/assets/javascripts/components/Material/Search/Result.jsx +++ b/src/assets/javascripts/components/Material/Search/Result.jsx @@ -161,9 +161,20 @@ export default class Result { /* Initialize index, if this has not be done yet */ if (ev.type === \"focus\" && !this.index_) { + document.querySelector(\".md-search__icon\").classList + .add(\"md-search-loader\") + if (this.isInitializing) { + return + } else { + this.isInitializing = true + } + this.meta_.textContent = \"Please wait while loading the indexes . . .\" /* Initialize index */ const init = data => { + document.querySelector(\".md-search__icon\").classList + .remove(\"md-search-loader\") + this.meta_.textContent = this.message_.placeholder /* Preprocess and index sections and documents */ this.docs_ = data.reduce((docs, doc) => { diff --git a/webpack.config.js b/webpack.config.js index aa273d2f..e0d7d785 100644 --- a/webpack.config.js +++ b/webpack.config.js @@ -255,20 +255,10 @@ module.exports = (_env, args) => { // eslint-disable-line complexity }, /* Sourcemaps */ - devtool: args.mode !== \"production\" ? \"inline-source-map\" : \"\", + devtool: \"source-map\", /* Optimizations */ optimization: { - minimizer: [ - new UglifyJsPlugin({ - uglifyOptions: { - output: { - comments: /^!/ - } - } - }), - new OptimizeCSSAssetsPlugin() - ], splitChunks: { cacheGroups: { commons: { Run npm run build Remove the following files from docs-apim/en/ in your https://github.com/wso2/docs-apim clone. theme/material/assets/javascripts/application.*.js theme/material/assets/javascripts/modernizr.*.js theme/material/assets/stylesheets/application-palette.*.css theme/material/assets/stylesheets/application.*.css theme/material/base.html Copy the the new files back to your docs-apim clone from the mkdocs-material clone you built at step 3. material/assets/javascripts/application.*.js material/assets/javascripts/modernizr.*.js material/assets/stylesheets/application* material/base.html Customizations done to the top navigation tabs-item.html for navigation seperation \u00b6 Top navigation seperation is achieved through matching the titles of pages which are on the right. If titles needs to be changed in right floted nav links, tabs-item.html has to be changed as well.","title":"Customizations done to the `material` theme"},{"location":"customizations/#customizations-done-to-the-material-theme","text":"","title":"Customizations done to the material theme"},{"location":"customizations/#layout-text-and-image-changes","text":"images/favicon.png images/logo.svg main.html templates/no-nav.html templates/swagger.html templates/2-column.html templates/single-column.html partials/nav-item.html partials/toc.html partials/tabs.html partials/language/en.html partials/footer.html partials/header.html partials/tabs-item.html partials/nav.html","title":"Layout, text, and image changes"},{"location":"customizations/#search-optimizations-note-the-following-are-generated-files","text":"base.html assets/javascripts/application.c3ee3888.js assets/javascripts/modernizr.268332fc.js assets/stylesheets/application.1b62728e.css assets/stylesheets/application-palette.a8b3c06d.css","title":"Search optimizations (note: the following are generated files)"},{"location":"customizations/#how-to-patch-the-mkdocs-material-theme-to-apply-search-optimizations","text":"Clone https://github.com/squidfunk/mkdocs-material (tag 4.5.1 ) Apply following diffs Boost title weight in search score related commit diff --git a/src/assets/javascripts/components/Material/Search/Result.jsx b/src/assets/javascripts/components/Material/Search/Result.jsx index 97a2f63e..0f54ae56 100644 --- a/src/assets/javascripts/components/Material/Search/Result.jsx +++ b/src/assets/javascripts/components/Material/Search/Result.jsx @@ -293,15 +293,14 @@ export default class Result { /* Append trailing wildcard to all terms for prefix querying */ .query(query => { + query.term(this.value_, { usePipeline: false, + fields: [\"title\"], boost: 200, + wildcard: lunr.Query.wildcard.TRAILING }) this.value_.toLowerCase().split(\" \") .filter(Boolean) .forEach(term => { - query.term(term, { wildcard: lunr.Query.wildcard.TRAILING }) - query.term(term, { - fields: [\"title\"], - boost: 200, - usePipeline: false - }) + query.term(term, { fields: [\"text\"], + boost: 1 }) }) }) - Add a loader [related commit](https://github.com/tmkasun/mkdocs-material/commit/3e92e6cd0c72bbee571cacd6941c87d25e3dd6aa) diff --git a/src/assets/javascripts/application.js b/src/assets/javascripts/application.js index 1962eea7..b3203a57 100644 --- a/src/assets/javascripts/application.js +++ b/src/assets/javascripts/application.js @@ -281,10 +281,12 @@ function initialize(config) { // eslint-disable-line func-style new Material.Search.Lock(\"[data-md-toggle=search]\"))) /* Component: search results */ + fetch(`${config.url.base}/search/search_index.json`) new Material.Event.Listener(\"[data-md-component=query]\", [ \"focus\", \"keyup\", \"change\" ], new Material.Search.Result(\"[data-md-component=result]\", () => { return fetch(`${config.url.base}/search/search_index.json`, { + cache: \"force-cache\", credentials: \"same-origin\" }).then(response => response.json()) .then(data => { diff --git a/src/assets/javascripts/components/Material/Search/Result.jsx b/src/assets/javascripts/components/Material/Search/Result.jsx index 4c876de5..889a8ff2 100644 --- a/src/assets/javascripts/components/Material/Search/Result.jsx +++ b/src/assets/javascripts/components/Material/Search/Result.jsx @@ -161,9 +161,20 @@ export default class Result { /* Initialize index, if this has not be done yet */ if (ev.type === \"focus\" && !this.index_) { + document.querySelector(\".md-search__icon\").classList + .add(\"md-search-loader\") + if (this.isInitializing) { + return + } else { + this.isInitializing = true + } + this.meta_.textContent = \"Please wait while loading the indexes . . .\" /* Initialize index */ const init = data => { + document.querySelector(\".md-search__icon\").classList + .remove(\"md-search-loader\") + this.meta_.textContent = this.message_.placeholder /* Preprocess and index sections and documents */ this.docs_ = data.reduce((docs, doc) => { diff --git a/webpack.config.js b/webpack.config.js index aa273d2f..e0d7d785 100644 --- a/webpack.config.js +++ b/webpack.config.js @@ -255,20 +255,10 @@ module.exports = (_env, args) => { // eslint-disable-line complexity }, /* Sourcemaps */ - devtool: args.mode !== \"production\" ? \"inline-source-map\" : \"\", + devtool: \"source-map\", /* Optimizations */ optimization: { - minimizer: [ - new UglifyJsPlugin({ - uglifyOptions: { - output: { - comments: /^!/ - } - } - }), - new OptimizeCSSAssetsPlugin() - ], splitChunks: { cacheGroups: { commons: { Run npm run build Remove the following files from docs-apim/en/ in your https://github.com/wso2/docs-apim clone. theme/material/assets/javascripts/application.*.js theme/material/assets/javascripts/modernizr.*.js theme/material/assets/stylesheets/application-palette.*.css theme/material/assets/stylesheets/application.*.css theme/material/base.html Copy the the new files back to your docs-apim clone from the mkdocs-material clone you built at step 3. material/assets/javascripts/application.*.js material/assets/javascripts/modernizr.*.js material/assets/stylesheets/application* material/base.html","title":"How to patch the mkdocs-material theme to apply search optimizations"},{"location":"customizations/#customizations-done-to-the-top-navigation-tabs-itemhtml-for-navigation-seperation","text":"Top navigation seperation is achieved through matching the titles of pages which are on the right. If titles needs to be changed in right floted nav links, tabs-item.html has to be changed as well.","title":"Customizations done to the top navigation tabs-item.html for navigation seperation"}]}